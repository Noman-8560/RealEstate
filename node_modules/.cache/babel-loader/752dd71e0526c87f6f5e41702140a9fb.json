{"ast":null,"code":"var _jsxFileName = \"E:\\\\Estate\\\\RealEstate\\\\src\\\\components\\\\home\\\\recent\\\\PaymentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentForm = () => {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(email);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: \"http://localhost:3000/success\",\n        receipt_email: email\n      } // Uncomment below if you only want redirect for redirect-based payments\n      //  redirect: '/success',\n\n    });\n\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occured.\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaymentElement, {\n        id: \"payment-element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isLoading || !stripe || !elements,\n        id: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"button-text\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            id: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this) : \"Pay now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"payment-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentForm, \"Ih3Y9HjD9W+PIOd8jP9MehE7gDM=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","useEffect","PaymentElement","useStripe","useElements","PaymentForm","stripe","elements","email","setEmail","message","setMessage","isLoading","setIsLoading","console","log","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","receipt_email","type","target","value"],"sources":["E:/Estate/RealEstate/src/components/home/recent/PaymentForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst PaymentForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  console.log(email);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        return_url: \"http://localhost:3000/success\",\r\n        receipt_email: email,\r\n      },\r\n      // Uncomment below if you only want redirect for redirect-based payments\r\n      //  redirect: '/success',\r\n    });\r\n\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occured.\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          id=\"email\"\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter email address\"\r\n        />\r\n        <PaymentElement id=\"payment-element\" />\r\n\r\n        <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n          <span id=\"button-text\">\r\n            {isLoading ? (\r\n              <div className=\"spinner\" id=\"spinner\"></div>\r\n            ) : (\r\n              \"Pay now\"\r\n            )}\r\n          </span>\r\n        </button>\r\n        {/* Show any error or success messages */}\r\n        {message && <div id=\"payment-message\">{message}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,WAHF,QAIO,yBAJP;;;AAMA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;EACA,MAAMI,QAAQ,GAAGH,WAAW,EAA5B;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;EAEAc,OAAO,CAACC,GAAR,CAAYP,KAAZ;;EACA,MAAMQ,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChCA,CAAC,CAACC,cAAF;;IACA,IAAI,CAACZ,MAAD,IAAW,CAACC,QAAhB,EAA0B;MACxB;MACA;MACA;IACD;;IACDM,YAAY,CAAC,IAAD,CAAZ;IAEA,MAAM;MAAEM;IAAF,IAAY,MAAMb,MAAM,CAACc,cAAP,CAAsB;MAC5Cb,QAD4C;MAE5Cc,aAAa,EAAE;QACbC,UAAU,EAAE,+BADC;QAEbC,aAAa,EAAEf;MAFF,CAF6B,CAM5C;MACA;;IAP4C,CAAtB,CAAxB;;IAUA,IAAIW,KAAK,CAACK,IAAN,KAAe,YAAf,IAA+BL,KAAK,CAACK,IAAN,KAAe,kBAAlD,EAAsE;MACpEb,UAAU,CAACQ,KAAK,CAACT,OAAP,CAAV;IACD,CAFD,MAEO;MACLC,UAAU,CAAC,8BAAD,CAAV;IACD;;IACDE,YAAY,CAAC,KAAD,CAAZ;EACD,CAzBD;;EA0BA,oBACE;IAAA,uBACE;MAAM,EAAE,EAAC,cAAT;MAAwB,QAAQ,EAAEG,YAAlC;MAAA,wBACE;QACE,EAAE,EAAC,OADL;QAEE,IAAI,EAAC,MAFP;QAGE,KAAK,EAAER,KAHT;QAIE,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACQ,MAAF,CAASC,KAAV,CAJ3B;QAKE,WAAW,EAAC;MALd;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,cAAD;QAAgB,EAAE,EAAC;MAAnB;QAAA;QAAA;QAAA;MAAA,QARF,eAUE;QAAQ,QAAQ,EAAEd,SAAS,IAAI,CAACN,MAAd,IAAwB,CAACC,QAA3C;QAAqD,EAAE,EAAC,QAAxD;QAAA,uBACE;UAAM,EAAE,EAAC,aAAT;UAAA,UACGK,SAAS,gBACR;YAAK,SAAS,EAAC,SAAf;YAAyB,EAAE,EAAC;UAA5B;YAAA;YAAA;YAAA;UAAA,QADQ,GAGR;QAJJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAVF,EAoBGF,OAAO,iBAAI;QAAK,EAAE,EAAC,iBAAR;QAAA,UAA2BA;MAA3B;QAAA;QAAA;QAAA;MAAA,QApBd;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CA5DD;;GAAML,W;UACWF,S,EACEC,W;;;KAFbC,W;AA8DN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}