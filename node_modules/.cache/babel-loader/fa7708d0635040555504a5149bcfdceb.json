{"ast":null,"code":"var _jsxFileName = \"E:\\\\Estate\\\\RealEstate\\\\src\\\\components\\\\auth\\\\Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form, Button, ButtonToolbar, Schema, Panel, FlexboxGrid, Container } from \"rsuite\";\nimport \"./signup.css\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MaskedInput from 'react-text-mask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  StringType,\n  NumberType\n} = Schema.Types;\nconst model = Schema.Model({\n  name: StringType().isRequired(\"This field is required.\"),\n  email: StringType().isEmail(\"Please enter a valid email address.\").isRequired(\"This field is required.\"),\n  phone: StringType().isRequired(\"This field is required.\"),\n  password: StringType().isRequired(\"This field is required.\"),\n  verifyPassword: StringType().addRule((value, data) => {\n    console.log(data);\n\n    if (value !== data.password) {\n      return false;\n    }\n\n    return true;\n  }, \"The two passwords do not match\").isRequired(\"This field is required.\")\n});\nconst InputMask = /*#__PURE__*/React.forwardRef(_c = (_ref, ref) => {\n  let {\n    onChange,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MaskedInput, { ...rest,\n    ref: ref,\n    className: \"rs-input\",\n    onChange: event => {\n      onChange(event.target.value);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n});\n_c2 = InputMask;\nconst TextField = /*#__PURE__*/React.forwardRef(_c3 = (props, ref) => {\n  const {\n    name,\n    label,\n    accepter,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    controlId: `${name}-4`,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(Form.ControlLabel, {\n      children: [label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      name: name,\n      accepter: accepter,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n});\n_c4 = TextField;\nconst mask = ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\n\nconst Signup = () => {\n  _s();\n\n  const formRef = React.useRef();\n  const [formError, setFormError] = React.useState({});\n  const [formValue, setFormValue] = React.useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    verifyPassword: \"\"\n  });\n\n  const handleSubmit = () => {\n    if (!formRef.current.check()) {\n      console.error(\"Form Error\");\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        xl: 6,\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow e\",\n          style: {\n            width: \"30rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n            children: /*#__PURE__*/_jsxDEV(FlexboxGrid.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"align-items-center d\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"mb-0\",\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                ref: formRef,\n                onChange: setFormValue,\n                onCheck: setFormError,\n                formValue: formValue,\n                model: model,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"name\",\n                  label: \"Username\",\n                  className: \"fields\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"email\",\n                  label: \"Email\",\n                  className: \"fields\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"phone\",\n                  label: \"Phone Number\",\n                  mask: mask,\n                  accepter: InputMask,\n                  className: \"fields\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"password\",\n                  label: \"Password\",\n                  type: \"password\",\n                  autoComplete: \"off\",\n                  className: \"fields\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  name: \"verifyPassword\",\n                  label: \"Confirm password\",\n                  type: \"password\",\n                  autoComplete: \"off\",\n                  className: \"fields\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                  className: \"wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    appearance: \"primary\",\n                    className: \"justify-content-center item1\",\n                    onClick: handleSubmit,\n                    children: \"Sign up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-center align-items-center mt-4 l\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fw-normal\",\n                    children: [\"Already have Account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/signin\",\n                      className: \"fw-bold aa\",\n                      children: \"Sign In\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"kNqWSuCYQvNK4YOWbaHwtxYqBZo=\");\n\n_c5 = Signup;\nexport default Signup; // import React, { useState } from \"react\";\n// import {\n//   Form,\n//   Button,\n//   ButtonToolbar,\n//   Schema,\n//   FlexboxGrid,\n//   Container,\n// } from \"rsuite\";\n// import \"./signup.css\";\n// import { Card, Row, Col } from \"react-bootstrap\";\n// import MaskedInput from \"react-text-mask\";\n// import axios from \"axios\";\n// import { Link, Redirect } from \"react-router-dom\";\n// const { StringType } = Schema.Types;\n// const model = Schema.Model({\n//   username: StringType().isRequired(\"This field is required.\"),\n//   email: StringType()\n//     .isEmail(\"Please enter a valid email address.\")\n//     .isRequired(\"This field is required.\"),\n//   phone: StringType().isRequired(\"This field is required.\"),\n//   password: StringType().isRequired(\"This field is required.\"),\n//   passwordConfirm: StringType()\n//     .addRule((value, data) => {\n//       console.log(data);\n//       if (value !== data.password) {\n//         return false;\n//       }\n//       return true;\n//     }, \"The two passwords do not match\")\n//     .isRequired(\"This field is required.\"),\n// });\n// const InputMask = React.forwardRef(({ onChange, ...rest }, ref) => (\n//   <MaskedInput\n//     {...rest}\n//     ref={ref}\n//     className=\"rs-input\"\n//     onChange={(event) => {\n//       onChange(event.target.value);\n//     }}\n//   />\n// ));\n// const TextField = React.forwardRef((props, ref) => {\n//   const { username, label, accepter, ...rest } = props;\n//   return (\n//     <Form.Group controlId={`${username}-4`} ref={ref}>\n//       <Form.ControlLabel>{label} </Form.ControlLabel>\n//       <Form.Control name={username} accepter={accepter} {...rest} />\n//     </Form.Group>\n//   );\n// });\n// const mask = [\n//   \"(\",\n//   /[1-9]/,\n//   /\\d/,\n//   \")\",\n//   \" \",\n//   /\\d/,\n//   /\\d/,\n//   /\\d/,\n//   \"-\",\n//   /\\d/,\n//   /\\d/,\n//   /\\d/,\n//   /\\d/,\n//   /\\d/,\n//   /\\d/,\n//   /\\d/,\n// ];\n// const Signup = () => {\n//   const formRef = React.useRef();\n//   // const [formError, setFormError] = React.useState({});\n//   // const [formValue, setFormValue] = React.useState({\n//   //   name: \"\",\n//   //   email: \"\",\n//   //   phone: \"\",\n//   //   password: \"\",\n//   //   verifyPassword: \"\",\n//   // });\n//   const [username, setUsername] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [phone_number, setPhone_number] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n//   const [redirect, setRedirect] = useState(false);\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     axios\n//       .post(\"http://127.0.0.1:8000/api/register\", {\n//         \"username\": username,\n//         \"email\": email,\n//         \"phone_number\": phone_number,\n//         \"password\": password,\n//         \"password2\": passwordConfirm,\n//       })\n//       .then((res) => {\n//         console.log(res);\n//         setRedirect(true);\n//       })\n//       .catch((error) => {\n//         console.log(\"catch\");\n//         console.log(error.response.data);\n//         console.log(error.response.data);\n//         let err = 'please check the entered fields correctly...'\n//         if(error.response.data.email) err = error.response.data.email\n//         else if(error.response.data.password) err = error.response.data.password\n//         else if(error.response.data.username) err = error.response.data.username\n//         alert.error(err)\n//       });\n//   };\n//   if (redirect) {\n//     return <Redirect to=\"/\" />;\n//   }\n//   return (\n//     <Container>\n//       <Row className=\"justify-content-center\">\n//         <Col xs={12} md={6} xl={6} className=\"login\">\n//           <Card className=\"shadow e\" style={{ width: \"30rem\" }}>\n//             <FlexboxGrid>\n//               <FlexboxGrid.Item>\n//                 <div className=\"align-items-center d\">\n//                   <h2 className=\"mb-0\">Sign up</h2>\n//                 </div>\n//                 <Form\n//                   ref={formRef}\n//                   onSubmit={(e) => handleSubmit(e)}\n//                   // onChange={setFormValue}\n//                   // onCheck={setFormError}\n//                   // formValue={formValue}\n//                   model={model}\n//                 >\n//                   <TextField\n//                     name=\"username\"\n//                     label=\"Username\"\n//                     className=\"fields\"\n//                     onChange={(e) => setUsername(e.target.value)}\n//                   />\n//                   <TextField\n//                     name=\"email\"\n//                     label=\"Email\"\n//                     className=\"fields\"\n//                     onChange={(e) => setEmail(e.target.value)}\n//                   />\n//                   <TextField\n//                     name=\"phone\"\n//                     label=\"Phone Number\"\n//                     mask={mask}\n//                     accepter={InputMask}\n//                     className=\"fields\"\n//                     onChange={e=>setPhone_number(e.target.value)}\n//                   />\n//                   <TextField\n//                     name=\"password\"\n//                     label=\"Password\"\n//                     type=\"password\"\n//                     autoComplete=\"off\"\n//                     className=\"fields\"\n//                     onChange={e=>setPassword(e.target.value)}\n//                   />\n//                   <TextField\n//                     name=\"passwordConfirm\"\n//                     label=\"Confirm password\"\n//                     type=\"password\"\n//                     autoComplete=\"off\"\n//                     className=\"fields\"\n//                     onChange={e=>setPasswordConfirm(e.target.value)}\n//                   />\n//                   <ButtonToolbar className=\"wrapper\">\n//                     <Button\n//                       appearance=\"primary\"\n//                       className=\"justify-content-center item1\"\n//                       type=\"submit\"\n//                     >\n//                       Sign up\n//                     </Button>\n//                   </ButtonToolbar>\n//                   <div className=\"d-flex justify-content-center align-items-center mt-4 l\">\n//                     <span className=\"fw-normal\">\n//                       Already have Account?{\" \"}\n//                       <Link to=\"/signin\" className=\"fw-bold aa\">\n//                         Sign In\n//                       </Link>\n//                     </span>\n//                   </div>\n//                 </Form>\n//               </FlexboxGrid.Item>\n//             </FlexboxGrid>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </Container>\n//   );\n// };\n// export default Signup;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InputMask$React.forwardRef\");\n$RefreshReg$(_c2, \"InputMask\");\n$RefreshReg$(_c3, \"TextField$React.forwardRef\");\n$RefreshReg$(_c4, \"TextField\");\n$RefreshReg$(_c5, \"Signup\");","map":{"version":3,"names":["React","Form","Button","ButtonToolbar","Schema","Panel","FlexboxGrid","Container","Card","Row","Col","Link","MaskedInput","StringType","NumberType","Types","model","Model","name","isRequired","email","isEmail","phone","password","verifyPassword","addRule","value","data","console","log","InputMask","forwardRef","ref","onChange","rest","event","target","TextField","props","label","accepter","mask","Signup","formRef","useRef","formError","setFormError","useState","formValue","setFormValue","handleSubmit","current","check","error","width"],"sources":["E:/Estate/RealEstate/src/components/auth/Signup.jsx"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  ButtonToolbar,\r\n  Schema,\r\n  Panel,\r\n  FlexboxGrid,\r\n  Container,\r\n} from \"rsuite\";\r\nimport \"./signup.css\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaskedInput from 'react-text-mask';\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired(\"This field is required.\"),\r\n  email: StringType()\r\n    .isEmail(\"Please enter a valid email address.\")\r\n    .isRequired(\"This field is required.\"),\r\n  phone: StringType().isRequired(\"This field is required.\"),\r\n\r\n  password: StringType().isRequired(\"This field is required.\"),\r\n  verifyPassword: StringType()\r\n    .addRule((value, data) => {\r\n      console.log(data);\r\n\r\n      if (value !== data.password) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }, \"The two passwords do not match\")\r\n    .isRequired(\"This field is required.\"),\r\n});\r\n\r\nconst InputMask = React.forwardRef(({ onChange, ...rest }, ref) => (\r\n  <MaskedInput\r\n    {...rest}\r\n    ref={ref}\r\n    className=\"rs-input\"\r\n    onChange={event => {\r\n      onChange(event.target.value);\r\n    }}\r\n  />\r\n));\r\n\r\nconst TextField = React.forwardRef((props, ref) => {\r\n  const { name, label, accepter, ...rest } = props;\r\n  return (\r\n    <Form.Group controlId={`${name}-4`} ref={ref}>\r\n      <Form.ControlLabel>{label} </Form.ControlLabel>\r\n      <Form.Control name={name} accepter={accepter} {...rest} />\r\n    </Form.Group>\r\n  );\r\n});\r\n\r\nconst mask = ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/,/\\d/,/\\d/,/\\d/, /\\d/];\r\n\r\nconst Signup = () => {\r\n  const formRef = React.useRef();\r\n  const [formError, setFormError] = React.useState({});\r\n  const [formValue, setFormValue] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    verifyPassword: \"\",\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    if (!formRef.current.check()) {\r\n      console.error(\"Form Error\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col xs={12} md={6} xl={6} className=\"login\">\r\n          <Card className=\"shadow e\" style={{ width: \"30rem\" }}>\r\n            <FlexboxGrid>\r\n              <FlexboxGrid.Item>\r\n                <div className=\"align-items-center d\">\r\n                  <h2 className=\"mb-0\">Sign up</h2>\r\n                </div>\r\n                <Form\r\n                  ref={formRef}\r\n                  onChange={setFormValue}\r\n                  onCheck={setFormError}\r\n                  formValue={formValue}\r\n                  model={model}\r\n                >\r\n                  <TextField name=\"name\" label=\"Username\" className=\"fields\" />\r\n                  <TextField name=\"email\" label=\"Email\" className=\"fields\" />\r\n                  <TextField\r\n                    name=\"phone\"\r\n                    label=\"Phone Number\"\r\n                    mask={mask}\r\n                    accepter={InputMask}\r\n                    className=\"fields\"\r\n                  />\r\n                  <TextField\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className=\"fields\"\r\n                  />\r\n                  <TextField\r\n                    name=\"verifyPassword\"\r\n                    label=\"Confirm password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className=\"fields\"\r\n                  />\r\n\r\n                  <ButtonToolbar className=\"wrapper\">\r\n                    <Button\r\n                      appearance=\"primary\"\r\n                      className=\"justify-content-center item1\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      Sign up\r\n                    </Button>\r\n                  </ButtonToolbar>\r\n\r\n                  <div className=\"d-flex justify-content-center align-items-center mt-4 l\">\r\n                    <span className=\"fw-normal\">\r\n                      Already have Account?{\" \"}\r\n                      <Link to=\"/signin\" className=\"fw-bold aa\">\r\n                        Sign In\r\n                      </Link>\r\n                    </span>\r\n                  </div>\r\n                </Form>\r\n              </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import {\r\n//   Form,\r\n//   Button,\r\n//   ButtonToolbar,\r\n//   Schema,\r\n//   FlexboxGrid,\r\n//   Container,\r\n// } from \"rsuite\";\r\n// import \"./signup.css\";\r\n// import { Card, Row, Col } from \"react-bootstrap\";\r\n// import MaskedInput from \"react-text-mask\";\r\n// import axios from \"axios\";\r\n// import { Link, Redirect } from \"react-router-dom\";\r\n\r\n// const { StringType } = Schema.Types;\r\n\r\n// const model = Schema.Model({\r\n//   username: StringType().isRequired(\"This field is required.\"),\r\n//   email: StringType()\r\n//     .isEmail(\"Please enter a valid email address.\")\r\n//     .isRequired(\"This field is required.\"),\r\n//   phone: StringType().isRequired(\"This field is required.\"),\r\n\r\n//   password: StringType().isRequired(\"This field is required.\"),\r\n//   passwordConfirm: StringType()\r\n//     .addRule((value, data) => {\r\n//       console.log(data);\r\n\r\n//       if (value !== data.password) {\r\n//         return false;\r\n//       }\r\n\r\n//       return true;\r\n//     }, \"The two passwords do not match\")\r\n//     .isRequired(\"This field is required.\"),\r\n// });\r\n\r\n// const InputMask = React.forwardRef(({ onChange, ...rest }, ref) => (\r\n//   <MaskedInput\r\n//     {...rest}\r\n//     ref={ref}\r\n//     className=\"rs-input\"\r\n//     onChange={(event) => {\r\n//       onChange(event.target.value);\r\n//     }}\r\n//   />\r\n// ));\r\n\r\n// const TextField = React.forwardRef((props, ref) => {\r\n//   const { username, label, accepter, ...rest } = props;\r\n//   return (\r\n//     <Form.Group controlId={`${username}-4`} ref={ref}>\r\n//       <Form.ControlLabel>{label} </Form.ControlLabel>\r\n//       <Form.Control name={username} accepter={accepter} {...rest} />\r\n//     </Form.Group>\r\n//   );\r\n// });\r\n\r\n// const mask = [\r\n//   \"(\",\r\n//   /[1-9]/,\r\n//   /\\d/,\r\n//   \")\",\r\n//   \" \",\r\n//   /\\d/,\r\n//   /\\d/,\r\n//   /\\d/,\r\n//   \"-\",\r\n//   /\\d/,\r\n//   /\\d/,\r\n//   /\\d/,\r\n//   /\\d/,\r\n//   /\\d/,\r\n//   /\\d/,\r\n//   /\\d/,\r\n// ];\r\n\r\n// const Signup = () => {\r\n//   const formRef = React.useRef();\r\n//   // const [formError, setFormError] = React.useState({});\r\n//   // const [formValue, setFormValue] = React.useState({\r\n//   //   name: \"\",\r\n//   //   email: \"\",\r\n//   //   phone: \"\",\r\n//   //   password: \"\",\r\n//   //   verifyPassword: \"\",\r\n//   // });\r\n\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [phone_number, setPhone_number] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n//   const [redirect, setRedirect] = useState(false);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     axios\r\n//       .post(\"http://127.0.0.1:8000/api/register\", {\r\n//         \"username\": username,\r\n//         \"email\": email,\r\n//         \"phone_number\": phone_number,\r\n//         \"password\": password,\r\n//         \"password2\": passwordConfirm,\r\n//       })\r\n//       .then((res) => {\r\n//         console.log(res);\r\n//         setRedirect(true);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(\"catch\");\r\n//         console.log(error.response.data);\r\n//         console.log(error.response.data);\r\n//         let err = 'please check the entered fields correctly...'\r\n//         if(error.response.data.email) err = error.response.data.email\r\n//         else if(error.response.data.password) err = error.response.data.password\r\n//         else if(error.response.data.username) err = error.response.data.username\r\n//         alert.error(err)\r\n//       });\r\n//   };\r\n//   if (redirect) {\r\n//     return <Redirect to=\"/\" />;\r\n//   }\r\n\r\n//   return (\r\n//     <Container>\r\n//       <Row className=\"justify-content-center\">\r\n//         <Col xs={12} md={6} xl={6} className=\"login\">\r\n//           <Card className=\"shadow e\" style={{ width: \"30rem\" }}>\r\n//             <FlexboxGrid>\r\n//               <FlexboxGrid.Item>\r\n//                 <div className=\"align-items-center d\">\r\n//                   <h2 className=\"mb-0\">Sign up</h2>\r\n//                 </div>\r\n//                 <Form\r\n//                   ref={formRef}\r\n//                   onSubmit={(e) => handleSubmit(e)}\r\n//                   // onChange={setFormValue}\r\n//                   // onCheck={setFormError}\r\n//                   // formValue={formValue}\r\n//                   model={model}\r\n//                 >\r\n//                   <TextField\r\n//                     name=\"username\"\r\n//                     label=\"Username\"\r\n//                     className=\"fields\"\r\n//                     onChange={(e) => setUsername(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     name=\"email\"\r\n//                     label=\"Email\"\r\n//                     className=\"fields\"\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     name=\"phone\"\r\n//                     label=\"Phone Number\"\r\n//                     mask={mask}\r\n//                     accepter={InputMask}\r\n//                     className=\"fields\"\r\n//                     onChange={e=>setPhone_number(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     name=\"password\"\r\n//                     label=\"Password\"\r\n//                     type=\"password\"\r\n//                     autoComplete=\"off\"\r\n//                     className=\"fields\"\r\n//                     onChange={e=>setPassword(e.target.value)}\r\n//                   />\r\n//                   <TextField\r\n//                     name=\"passwordConfirm\"\r\n//                     label=\"Confirm password\"\r\n//                     type=\"password\"\r\n//                     autoComplete=\"off\"\r\n//                     className=\"fields\"\r\n//                     onChange={e=>setPasswordConfirm(e.target.value)}\r\n//                   />\r\n\r\n//                   <ButtonToolbar className=\"wrapper\">\r\n//                     <Button\r\n//                       appearance=\"primary\"\r\n//                       className=\"justify-content-center item1\"\r\n//                       type=\"submit\"\r\n//                     >\r\n//                       Sign up\r\n//                     </Button>\r\n//                   </ButtonToolbar>\r\n\r\n//                   <div className=\"d-flex justify-content-center align-items-center mt-4 l\">\r\n//                     <span className=\"fw-normal\">\r\n//                       Already have Account?{\" \"}\r\n//                       <Link to=\"/signin\" className=\"fw-bold aa\">\r\n//                         Sign In\r\n//                       </Link>\r\n//                     </span>\r\n//                   </div>\r\n//                 </Form>\r\n//               </FlexboxGrid.Item>\r\n//             </FlexboxGrid>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     </Container>\r\n//   );\r\n// };\r\n// export default Signup;\r\n\r\n"],"mappings":"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},"metadata":{},"sourceType":"module"}